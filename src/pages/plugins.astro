---
import Layout from "../layouts/Layout.astro";
import { PLUGINS_JSON_URL } from "../scripts/constants";
import * as Typography from "../components/typography";

interface Dev {
    name: string;
    id: string;
}

interface PluginData {
    name: string;
    description: string;
    authors: Dev[];
    dependencies: string[];
    hasPatches: boolean;
    hasCommands: boolean;
    required: boolean;
    enabledByDefault: boolean;
    target: "desktop" | "web" | "dev";
}

const plugins: PluginData[] = await fetch(PLUGINS_JSON_URL).then(r => {
    if (!r.ok) throw new Error("Failed to fetch plugins.json: " + r.status);
    return r.json();
});

Astro.response.headers.set("Cache-Control", "s-maxage=300");
---

<Layout title="Vencord Plugins" description="Vencord plugin list">
    <div class="container">
        <h1 class="page-title">Plugins</h1>
        <p class="subtitle">
            We have {plugins.length} plugins available for you to use immediately,
            with more being made every day.
        </p>
        <div class="plugins-grid">
            {
                plugins.map((plugin, idx) => (
                    <div class="plugin">
                        {/*
                        <img src={plugin.screenshot || "/assets/screenshot-placeholder.png"} class="plugin-screenshot" />
                        */}
                        <div class="plugin-content">
                            <Typography.LabelLarge>{plugin.name}</Typography.LabelLarge>
                            <div class="author">
                                <span id="by">by</span>
                                <span class="author">
                                    {plugin.authors.map(a => a.name).join(", ")}
                                </span>
                            </div>
                            <p class="description">{plugin.description}</p>
                        </div>
                    </div>
                ))
            }
        </div>
    </div>
</Layout>

<style>
    h1 {
        color: var(--accentBlue);
    }

    .container {
        display: flex;
        flex-direction: column;
    }

    .plugins-grid {
        display: grid;
        grid-template-columns: repeat(3, minmax(0, 1fr));
        grid-auto-rows: 1fr;
        grid-auto-columns: 1fr;
        grid-gap: 1em;
    }

    @media screen and (max-width: 1200px) {
        .plugins-grid {
            grid-template-columns: repeat(2, minmax(0, 1fr));
        }
    }

    @media screen and (max-width: 800px) {
        .plugins-grid {
            grid-template-columns: 1fr;
        }
    }

    .plugin {
        display: flex;
        flex-direction: column;
        background: var(--bg4);

        border-radius: 12px;
        padding: 16px;

        transition: 200ms box-shadow cubic-bezier(0.25, 0.8, 0.25, 1);
    }

    .plugin:hover {
        box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;
    }

    .plugin .plugin-screenshot {
        object-fit: cover;
        width: 100%;
        border-radius: 4px;
        margin-bottom: 16px;
    }

    .plugin-content {
        display: flex;
        flex-direction: column;
    }

    .plugin-content .title {
        font-size: 1em;
        font-weight: bold;
    }

    .plugin-content .author {
        display: flex;

        color: var(--grey1);
    }

    .plugin-content .author #by {
        color: var(--grey0);
        margin-right: 4px;
    }

    .plugin-content .description {
        font-size: 0.9em;
        filter: brightness(90%);
        margin-bottom: 0;
    }
</style>
